###概要###
機械学習を含むデータマイニングやデータ解析のライブラリ
深層学習以外の機械学習ではデファクトスタンダード

##########

///df.isnull()で各要素に欠損値が存在するか確認可能(返り値はDataFrameごと帰ってくる)

///欠損値の補完には特徴量の平均値、最頻値、中央値などを用いる。
///scikit-learnではpreprocessingモジュールのImputerクラスを使用可能。
ex)imp = Imputer(strategy='mean',axis=0)
   #欠損値の補完
　 imp.fit(df)
   imp.transform(df)

 strategy = meanは平均値、medianは中央値、most_frequentは最頻値を選択できる
 axis = 補完する値を計算するときの使用する軸を指定する。
        0は列に対して、1は行に対して行う


///機械学習でカテゴリ変数を扱う場合、コンピュータが処理しやすいように数値に変換する必要がある。
///手法はカテゴリ変数のエンコーディングとOne-hotエンコーディングがある
///カテゴリ変数のエンコーディングとは「a→0,b→1,c→2」のように数値に変換すること。

///カテゴリ変数をエンコーディングするにはpreprocessingモジュールのLabelEncoderクラスを使用する。
///変換前の元の値はclasses_属性により確認可能

///One-hotエンコーディングとは、カテゴリ変数に対して行う符号化処理のこと。
///b=A,b=B,b=C ....とある場合、b_A,b_B,b_C...とカラムを新しく置き換え、
///該当カラムには1を、該当しない場合は0をデータとして登録する。

///分散正規化とは特徴量の平均が0、標準偏差が1となるように特徴量を変換する処理
///scickit-learnで分散正規化を行うにはpreprocessingモジュールのStandardScalerクラスを使用。
///fitメソッドで各列の平均と標準偏差を求め、transformメソッドにDataFrameを指定して分散正規化を実行する。

///最小最大正規化は、特徴量の最小値が0、最大値が1を取るように特徴量を正規化する処理
///scickit-learnではpreprocessingモジュールのMinMaxScalerクラスを使用。


